import pandas as pd
import numpy as np
import argparse
import shutil

parser = argparse.ArgumentParser(description='Generates plot of the face attributes from the CSV file')

parser.add_argument("--src", default="/workspace/fair-distill/data/alltrain", type=str, help='path of the directory containing images generated by teacher GAN')
parser.add_argument("--tgt", default="/workspace/fair-distill/data/disttrain", type=str, help='path of the directory containing images to be distilled to student GAN')
parser.add_argument("--predfile", default="/workspace/fair-distill/results/test_outputs.csv", type=str, help='path of the directory containing attribute predictions by FairFace for teacher GAN images')
# For now just taking "race4" attribute
# detected_faces/race_Asian_face0
def main():
    global args
    args = parser.parse_args()

    pred_df = pd.read_csv(args.predfile)
    attr_df = pred_df[['face_name_align','race4']]
    attrib_vals = attr_df['race4'].unique()
    sample_count = min(attr_df.groupby(["race4"]).count()['face_name_align'])
    for item in attrib_vals:
        temp_df = attr_df.loc[attr_df['race4'] == item]
        temp_df = temp_df.reset_index(drop=True)
        temp_df = temp_df.reset_index()
        #print(temp_df)
        for idx in range(sample_count):
            #print(temp_df.loc[temp_df['index'] == idx]['face_name_align'].values)
            img_path = temp_df.loc[temp_df['index'] == idx]['face_name_align'].values[0]
            img_jpg = str.split(img_path, '/')[1]
            img_name = str.split(img_jpg, '_')[0]
            shutil.copy(f'{args.src}/images/{img_name}.png', f'{args.tgt}/s_images/{img_name}.png')
            shutil.copy(f'{args.src}/latentsz/{img_name}.npy', f'{args.tgt}/s_latentsz/{img_name}.npy')

if __name__ == "__main__":
    main()

            






